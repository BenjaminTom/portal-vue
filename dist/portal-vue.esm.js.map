{"version":3,"file":"portal-vue.esm.js","sources":["../src/composables/wormhole.ts","../src/components/portal.tsx","../src/components/portal-target.tsx","../src/utils/index.ts","../src/components/mounting-portal.ts","../src/components/wormhole.ts","../src/index.ts"],"sourcesContent":["import { Wormhole } from '@/types'\nimport { inject, InjectionKey, provide } from 'vue'\n\nexport const wormholeSymbol = Symbol('wormhole') as InjectionKey<Wormhole>\n\nexport function useWormhole() {\n  const wh = inject(wormholeSymbol)\n\n  if (!wh) {\n    throw new Error(`\n    [portal-vue]: Injection for 'wormhole' not found. \n    Are you sure you installed the plugin with 'app.use(plugin)'?`)\n  }\n\n  return wh\n}\n\nexport function provideWormhole(wormhole: Wormhole) {\n  provide(wormholeSymbol, wormhole)\n}\n","import { useWormhole } from '@/composables/wormhole'\nimport {\n  defineComponent,\n  onBeforeUnmount,\n  onMounted,\n  onUpdated,\n  Slots,\n  watch,\n} from 'vue'\n\nlet _id = 1\n\nexport interface PortalProps {\n  disabled: boolean\n  name: string\n  order: number\n  slim?: boolean\n  slotProps: Record<string, any>\n  to: string\n}\n\nexport function usePortal(props: PortalProps, slots: Slots) {\n  const wormhole = useWormhole()\n\n  function sendUpdate() {\n    const { to, name: from, order } = props\n    if (slots.default) {\n      wormhole.open({\n        to,\n        from,\n        order,\n        content: slots.default,\n      })\n    } else {\n      clear()\n    }\n  }\n\n  function clear(target?: string) {\n    wormhole.close({\n      to: target ?? props.to,\n      from: props.name,\n    })\n  }\n  onMounted(() => {\n    if (!props.disabled) {\n      sendUpdate()\n    }\n  })\n\n  onUpdated(() => {\n    if (props.disabled) {\n      clear()\n    } else {\n      sendUpdate()\n    }\n  })\n\n  onBeforeUnmount(() => {\n    clear()\n  })\n\n  watch(\n    () => props.to,\n    (newTo, oldTo) => {\n      if (props.disabled) return\n      if (oldTo && oldTo !== newTo) {\n        clear(oldTo)\n      }\n      sendUpdate()\n    }\n  )\n}\n\nexport default defineComponent({\n  name: 'portal',\n  props: {\n    disabled: { type: Boolean },\n    name: { type: String, default: () => String(_id++) },\n    order: { type: Number, default: 0 },\n    slim: { type: Boolean },\n    slotProps: { type: Object, default: () => ({}) },\n    to: {\n      type: String,\n      default: () => String(Math.round(Math.random() * 10000000)),\n    },\n  },\n  setup(props, { slots }) {\n    usePortal(props, slots)\n\n    return () => {\n      if (props.disabled && slots.default) {\n        return slots.default(props.slotProps)\n      } else {\n        return null\n      }\n    }\n  },\n})\n","import {\n  defineComponent,\n  PropType,\n  h,\n  resolveComponent,\n  FunctionalComponent,\n  ComponentOptions,\n  ComponentInternalInstance,\n  getCurrentInstance,\n  computed,\n  watch,\n  VNode,\n} from 'vue'\nimport { useWormhole } from '@/composables/wormhole'\n\ntype TransitionComponent = PropType<\n  ComponentOptions<any> | FunctionalComponent | string\n>\n\nexport const PortalTargetContent: FunctionalComponent = (_, { slots }) => {\n  return slots.default?.()\n}\n\nexport default defineComponent({\n  name: 'portalTarget',\n  props: {\n    multiple: { type: Boolean, default: false },\n    name: { type: String, required: true },\n    slotProps: { type: Object, default: () => ({}) },\n    __parent: {\n      type: Object as PropType<ComponentInternalInstance>,\n    },\n  },\n  setup(props, { emit, slots }) {\n    // TODO: validate if parent injection works\n    // depends on MountingPortalTarget\n    if (props.__parent) {\n      useParentInjector(props.__parent)\n    }\n\n    const wormhole = useWormhole()\n\n    const slotVnodes = computed<{ vnodes: VNode[]; vnodesFn: () => VNode[] }>(\n      () => {\n        const transports = wormhole.getContentForTarget(props.name)\n        const wrapperSlot = slots.wrapper\n        const rawNodes = transports.map((t) => t.content(props.slotProps))\n        const vnodes = wrapperSlot\n          ? rawNodes.flatMap((nodes) =>\n              nodes.length ? wrapperSlot(nodes) : []\n            )\n          : rawNodes.flat(1)\n        return {\n          vnodes,\n          vnodesFn: () => vnodes, // just to make Vue happy. raw vnodes in a slot give a DEV warning\n        }\n      }\n    )\n\n    watch(slotVnodes, ({ vnodes }) => {\n      const hasContent = vnodes.length > 0\n      const content = wormhole.transports.get(props.name)\n      const sources = content ? [...content.keys()] : []\n      emit('change', { hasContent, sources })\n    })\n\n    return () => {\n      const hasContent = !!slotVnodes.value.vnodes.length\n      if (hasContent) {\n        return h(PortalTargetContent, slotVnodes.value.vnodesFn)\n      } else {\n        slots.default?.()\n      }\n    }\n  },\n})\n\nfunction useParentInjector(parent: ComponentInternalInstance) {\n  const vm = getCurrentInstance()\n  vm!.parent = parent\n}\n","export const inBrowser = typeof window !== 'undefined'\n\nexport function stableSort<T>(array: T[], compareFn: Function) {\n  return array\n    .map((v: T, idx: number) => {\n      return [idx, v] as [number, T]\n    })\n    .sort(function (a, b) {\n      return compareFn(a[1], b[1]) || a[0] - b[0]\n    })\n    .map((c) => c[1])\n}\n","import {\n  ComponentOptions,\n  createApp,\n  defineComponent,\n  getCurrentInstance,\n  h,\n  onBeforeUnmount,\n} from 'vue'\nimport { usePortal } from './portal'\nimport PortalTarget from './portal-target'\nimport { inBrowser } from '@/utils'\nimport { useWormhole, wormholeSymbol } from '@/composables/wormhole'\n\nlet _id = 0\n\nexport default defineComponent({\n  name: 'MountingPortal',\n  inheritAttrs: false,\n  props: {\n    mountTo: { type: String, required: true },\n\n    // Portal\n    disabled: { type: Boolean },\n    // name for the portal\n    name: {\n      type: String,\n      default: () => 'mounted_' + String(_id++),\n    },\n    order: { type: Number, default: 0 },\n    slotProps: { type: Object, default: () => ({}) },\n    tag: { type: String, default: 'DIV' },\n    // name for the target\n    to: {\n      type: String,\n      default: () => String(Math.round(Math.random() * 10000000)),\n    },\n\n    // Target\n    multiple: { type: Boolean, default: false },\n    targetSlotProps: { type: Object, default: () => ({}) },\n  },\n  setup(props, { slots }) {\n    const wormhole = useWormhole()\n    if (inBrowser) {\n      const el = getTargetEl(props.mountTo)\n\n      const targetProps = {\n        multiple: props.multiple,\n        name: props.to,\n        slotProps: props.targetSlotProps,\n        __parent: getCurrentInstance()?.parent,\n      }\n\n      const app = createApp({\n        // TODO: fix Component type error\n        render: () => h(PortalTarget as ComponentOptions, targetProps),\n      })\n      app.provide(wormholeSymbol, wormhole)\n      onBeforeUnmount(() => {\n        app.unmount(el)\n      })\n    }\n\n    usePortal(props, slots)\n\n    return () => {\n      if (props.disabled && slots.default) {\n        return slots.default()\n      } else {\n        return null\n      }\n    }\n  },\n})\n\nfunction getTargetEl(mountTo: string): HTMLElement {\n  const el: HTMLElement | null = document.querySelector(mountTo)\n\n  if (!el) {\n    throw new Error(\n      `[portal-vue]: Mount Point '${mountTo}' not found in document`\n    )\n  }\n  return el\n}\n","import {\n  TransportsHub,\n  TransportInput,\n  Transport,\n  TransportCloser,\n  Wormhole,\n} from '@/types'\nimport { inBrowser, stableSort } from '@/utils'\nimport { computed, reactive, readonly } from 'vue'\n\nexport function createWormhole(): Wormhole {\n  const transports: TransportsHub = reactive(new Map())\n\n  function open(transport: TransportInput) {\n    if (!inBrowser) return\n\n    const { to, from, content, order = Infinity } = transport\n    if (!to || !from || !content) return\n\n    if (!transports.has(to)) {\n      transports.set(to, new Map())\n    }\n    const transportsForTarget = transports.get(to)!\n\n    const newTransport = {\n      to,\n      from,\n      content,\n      order,\n    } as Transport\n\n    transportsForTarget.set(from, newTransport)\n  }\n\n  function close(transport: TransportCloser) {\n    const { to, from } = transport\n    if (!to || !from) return\n    const transportsForTarget = transports.get(to)\n    if (!transportsForTarget) {\n      return\n    }\n    transportsForTarget.delete(from)\n    if (!transportsForTarget.size) {\n      transports.delete(to)\n    }\n  }\n\n  function getContentForTarget(target: string) {\n    const transportsForTarget = transports.get(target)\n    if (!transportsForTarget) return []\n\n    return stableSort(\n      Array.from(transportsForTarget?.values() || []),\n      (a: Transport, b: Transport) => a.order - b.order\n    )\n  }\n\n  return readonly({\n    open,\n    close,\n    transports,\n    getContentForTarget,\n  }) as Wormhole\n}\n\nexport const wormhole = createWormhole()\n","import Portal from './components/portal'\nimport PortalTarget, { PortalTargetContent } from './components/portal-target'\nimport MountingPortal from './components/mounting-portal'\nimport { wormhole as defaultWormhole } from './components/wormhole'\nimport { App } from 'vue'\nimport { Wormhole as TWormhole } from './types'\nimport {\n  useWormhole,\n  provideWormhole,\n  wormholeSymbol,\n} from './composables/wormhole'\n\nexport interface PluginOptions {\n  portalName?: string\n  portalTargetName?: string\n  MountingPortalName?: string\n  wormhole?: TWormhole\n}\n\nexport function install(app: App, options: PluginOptions = {}) {\n  app.component(options.portalName || 'Portal', Portal)\n  app.component(options.portalTargetName || 'PortalTarget', PortalTarget)\n  app.component(options.MountingPortalName || 'MountingPortal', MountingPortal)\n\n  const wormhole = options.wormhole ?? defaultWormhole\n  app.provide(wormholeSymbol, wormhole)\n}\n\n// alternative name for named import\nexport const plugin = install\nexport const Wormhole = defaultWormhole\n\nexport {\n  Portal,\n  PortalTarget,\n  PortalTargetContent,\n  MountingPortal,\n  useWormhole,\n  provideWormhole,\n  TWormhole,\n}\n"],"names":["wormholeSymbol","Symbol","useWormhole","wh","inject","Error","provideWormhole","wormhole","provide","_id","usePortal","props","slots","sendUpdate","to","name","from","order","default","open","content","clear","target","close","onMounted","disabled","onUpdated","onBeforeUnmount","watch","newTo","oldTo","defineComponent","type","Boolean","String","Number","slim","slotProps","Object","Math","round","random","setup","PortalTargetContent","_","multiple","required","__parent","emit","useParentInjector","slotVnodes","computed","transports","getContentForTarget","wrapperSlot","wrapper","rawNodes","map","t","vnodes","flatMap","nodes","length","flat","vnodesFn","hasContent","get","sources","keys","value","h","parent","vm","getCurrentInstance","inBrowser","window","stableSort","array","compareFn","v","idx","sort","a","b","c","inheritAttrs","mountTo","tag","targetSlotProps","el","getTargetEl","targetProps","app","createApp","render","PortalTarget","unmount","document","querySelector","createWormhole","reactive","Map","transport","Infinity","has","set","transportsForTarget","newTransport","delete","size","Array","values","readonly","install","options","component","portalName","Portal","portalTargetName","MountingPortalName","MountingPortal","defaultWormhole","plugin","Wormhole"],"mappings":"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"}